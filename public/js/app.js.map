{"version":3,"sources":["app.coffee","helper.coffee","getStatus.coffee"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["# console.log \"hello from coffeescript!!\"\n\n# Init tooltips\n$('[data-toggle=\"tooltip\"]').tooltip()\n\n# Init Popovers\n$('[data-toggle=\"popover\"]').popover\n    html: true\n","# Calc Median\n# ----------------------------\ngetMedian = (values) ->\n    values.sort (a,b) -> return a - b\n    half = Math.floor values.length/2\n    if values.length % 2\n        return values[half]\n    else\n        return (values[half-1] + values[half]) / 2.0\n\n# Fetch price of vinyl ID\n# ----------------------------------\n$.fetchPrice = (id, userCurrency, callback) ->\n\n    EURinUSD = 1.12 # USD\n    EURinGBP = 0.79 # GBP\n    GBPinUSD = 1.42 # USD\n\n    $.ajax\n        url: \"https://api.discogs.com/marketplace/search?release_id=#{id}\"\n        type: 'GET'\n        dataType: 'JSON'\n        error: (x,status,error) ->\n            console.log status\n            console.log error\n        success: (prices) -> # prices\n            # console.log prices\n            values = []\n            median = 0\n\n            # convert all prices to EUR and add up\n            _.each prices, (price) ->\n                currency = price.currency\n\n                switch(price.currency)\n                    when 'EUR'\n                        values.push(parseInt(price.price.substr(1)))\n                    when 'GBP'\n                        values.push(parseInt(price.price.substr(1)) / EURinGBP)\n                    when 'USD'\n                        values.push(parseInt(price.price.substr(1)) / EURinUSD)\n\n            # calc median\n            median = getMedian(values).toFixed(2)\n\n            # convert to users currency\n            switch(userCurrency)\n                when 'EUR'\n                    median = median\n                when 'GBP'\n                    median = median * EURinGBP\n                when 'USD'\n                    median = median * EURinUSD\n\n            callback(median)\n\n# Map fetched vinyl data to object required to create vinyl\n# ---------------------------------------------------------\n$.mapVinylData = (vinyl) ->\n    $vinylData = {}\n\n    # artist\n    if vinyl.artists\n        $vinylData.artist = vinyl.artists[0].name\n    else\n        $vinylData.artist = 'unknown artist'\n\n    # title\n    if vinyl.title\n        $vinylData.title = vinyl.title\n    else\n        $vinylData.title = 'unknown title'\n\n    # cover\n    if vinyl.images\n        $vinylData.cover = vinyl.images[0].uri\n    else\n        $vinylData.cover = 'images/PH_vinyl.svg'\n\n    # label & catno\n    if vinyl.labels\n        $vinylData.label = vinyl.labels[0].name\n        if vinyl.labels[0].catno\n            $vinylData.catno = vinyl.labels[0].catno\n        else\n            $vinylData.catno = 'unknown catno'\n    else\n        $vinylData.label = 'unknown label'\n\n    # genre\n    if vinyl.genres\n        $vinylData.genre = vinyl.genres[0]\n    else\n        $vinylData.genre = 'unknown genre'\n\n    # country\n    if vinyl.country\n        $vinylData.country = vinyl.country\n    else\n        $vinylData.country = 'unknown country'\n\n    # year\n    if vinyl.year\n        $vinylData.year = vinyl.year\n    else\n        $vinylData.year = 'unknown year'\n\n    # count\n    if vinyl.format_quantity\n        $vinylData.count = vinyl.format_quantity\n    else\n        $vinylData.count = 'unknown quantity'\n\n    # weight\n    if vinyl.estimated_weight\n        $vinylData.weight = vinyl.estimated_weight\n    else\n        $vinylData.weight = '0'\n\n    # type\n    if vinyl.type\n        $vinylData.type = vinyl.type\n    else\n        $vinylData.type = '-'\n\n    # color\n    $vinylData.color = '#000000'\n\n    # size\n    $vinylData.size = '12'\n\n    # format\n    $vinylData.format = 'LP'\n\n    # release ID\n    $vinylData.release_id = vinyl.id\n\n    # Discogs URI\n    $vinylData.discogs_uri = vinyl.uri\n\n    # tracklist\n    if vinyl.tracklist\n        tmpTracklist = []\n        for track, key in vinyl.tracklist\n            # console.log key, track\n            tmpTracklist.push\n                duration: track.duration\n                position: track.position\n                title: track.title\n        $vinylData.tracklist = tmpTracklist\n    else\n        $vinylData.tracklist = []\n\n    # videos\n    if vinyl.videos\n        $vinylData.videos = vinyl.videos\n    else\n        $vinylData.videos = []\n\n    return $vinylData\n","$.getStatus = (userId) ->\n    $vinyls = $.ajax\n        url: '/api/user/'+userId+'/status'\n        type: 'GET'\n        error: (x,status,error) -> # not connected\n            console.warn status\n            console.warn error\n            $('.js-connectionStatus').removeClass('btn-info').addClass('btn-danger').html('<i class=\"fa fa-fw fa-exclamation-circle\"></i> Not connected')\n            $('.js-connectionAction').removeClass 'hidden'\n            return false\n        success: (response) -> # connected\n            $('.js-connectionStatus').removeClass('btn-info').addClass('btn-success').html('<i class=\"fa fa-fw fa-check\"></i> Connected')\n            return true\n"],"sourceRoot":"/source/"}