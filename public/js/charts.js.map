{"version":3,"sources":["charts.coffee"],"names":[],"mappings":"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","file":"charts.js","sourceRoot":"/source/","sourcesContent":["$.getStats = (userId) ->\n  console.log 'user: '+userId\n\n  $vinyls = $.ajax\n    url: '/api/user/'+userId+'/vinyls'\n    type: 'GET'\n    dataType: 'JSON'\n    error: (x,status,error) ->\n      console.log status\n      console.log error\n    success: (vinyls) -> # search results received\n      #console.log vinyls\n\n      genreData = []\n\n      sizeData = [\n        ['x'],\n        ['sizes']\n      ]\n      sizeData_temp = []\n\n      timeData = [\n        ['x']\n        ['vinyls']\n      ]\n      timeData_temp = []\n\n      _.each vinyls, (vinyl) ->\n        # --- Genre --------------------------------\n        genre = vinyl.genre.split(';')[0]\n        if genre == \"\"\n          genre = \"unknown\"\n        genreData.push(genre)\n\n        # --- Size --------------------------------\n        size = vinyl.size\n        sizeData_temp.push(size)\n\n        # --- Time --------------------------------\n        time = new Date(vinyl.releasedate)\n        if time.getFullYear()\n          timeData_temp.push(time.format('Y'))\n\n      console.log timeData_temp\n      \n      genreData = _.chain(genreData).countBy().pairs().value()\n\n      sizeData_temp = _.chain(sizeData_temp).countBy().pairs().value()\n      _.each sizeData_temp, (sizeArray) ->\n        sizeData[0].push(sizeArray[0])\n        sizeData[1].push(sizeArray[1])\n\n      timeData_temp = _.chain(timeData_temp).countBy().pairs().value()\n      _.each timeData_temp, (timeArray) ->\n        timeData[0].push(timeArray[0])\n        timeData[1].push(timeArray[1])\n\n\n      console.log timeData\n\n\n      # --- Charts --------------------------------\n      genreChart = c3.generate\n        bindto: '#genreChart'\n        data:\n          columns: genreData\n          type: 'donut'\n        legend:\n          show: true\n        donut:\n          title: vinyls.length+' Vinyls'\n          label:\n            format: (value) ->\n                return value\n\n      sizeChart = c3.generate\n        bindto: '#sizeChart'\n        data:\n          x: 'x'\n          columns: sizeData\n          types:\n            sizes: 'bar'\n        legend:\n          show: false\n        axis:\n          x:\n            type: 'categorized'\n\n      timeChart = c3.generate\n        bindto: '#timeChart'\n        data:\n          x: 'x'\n          columns: timeData\n        legend:\n          show: false"]}