{"version":3,"sources":["charts.coffee"],"names":[],"mappings":"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","file":"charts.js","sourcesContent":["$.fetchVinylPage = (page) ->\n    vinyls = []\n    $vinyls = $.ajax\n        url: '/api/user/'+userId+'/vinyls'\n        type: 'GET'\n        dataType: 'JSON'\n        error: (x,status,error) ->\n            console.log status\n            console.log error\n        success: (response) ->\n            return response.data\n\n$.getStats = (userId) ->\n    $vinyls = $.ajax\n        url: '/api/user/'+userId+'/vinyls/all'\n        type: 'GET'\n        dataType: 'JSON'\n        error: (x,status,error) ->\n            console.log status\n            console.log error\n        success: (vinyls) -> # search results received\n            # console.log vinyls\n            genreData = []\n\n            sizeData = [\n                ['x'],\n                ['sizes']\n            ]\n            sizeData_temp = []\n\n            timeData = [\n                ['x']\n                ['vinyls']\n            ]\n            timeData_temp = []\n\n            _.each vinyls, (vinyl) ->\n                # --- Genre --------------------------------\n                genre = vinyl.genre.split(';')[0]\n                genre = \"unknown\" if genre is \"\"\n                genreData.push(genre)\n\n                # --- Size --------------------------------\n                size = vinyl.size\n                sizeData_temp.push(size)\n\n                # --- Time --------------------------------\n                time = new Date(vinyl.releasedate)\n                if time.getFullYear()\n                    timeData_temp.push(time.format('Y'))\n\n            # console.log timeData_temp\n\n            genreData = _.chain(genreData).countBy().toPairs().value()\n\n            sizeData_temp = _.chain(sizeData_temp).countBy().toPairs().value()\n            _.each sizeData_temp, (sizeArray) ->\n                sizeData[0].push(sizeArray[0])\n                sizeData[1].push(sizeArray[1])\n\n            timeData_temp = _.chain(timeData_temp).countBy().toPairs().value()\n            _.each timeData_temp, (timeArray) ->\n                timeData[0].push(timeArray[0])\n                timeData[1].push(timeArray[1])\n\n            # console.log timeData\n\n            # --- Charts --------------------------------\n            genreChart = c3.generate\n                bindto: '#genreChart'\n                data:\n                    columns: genreData\n                    type: 'donut'\n                legend:\n                    show: true\n                donut:\n                    title: vinyls.length + ' Vinyls'\n                    label:\n                        format: (value) ->\n                            return value\n\n            sizeChart = c3.generate\n                bindto: '#sizeChart'\n                data:\n                    x: 'x'\n                    columns: sizeData\n                    types:\n                        sizes: 'bar'\n                legend:\n                    show: false\n                axis:\n                    x:\n                        type: 'categorized'\n\n            timeChart = c3.generate\n                bindto: '#timeChart'\n                data:\n                    x: 'x'\n                    columns: timeData\n                legend:\n                    show: false\n"],"sourceRoot":"/source/"}