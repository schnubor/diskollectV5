{"version":3,"sources":["import.coffee"],"names":[],"mappings":"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","file":"import.js","sourcesContent":["discogs_vinyls = []\nvinylsToImport = []\n\n# Fetch a site from discogs\n# -----------------------------------\n$.fetchDiscogsPage = (username, page, promises = []) ->\n    request = $.ajax\n        url: \"https://api.discogs.com/users/#{username}/collection/folders/0/releases?page=#{page}&per_page=100\"\n        type: 'GET'\n        error: (x,status,error) ->\n            console.log status\n            console.log error\n        success: (response) ->\n            console.log response\n            return response.releases\n    promises.push(request)\n\n# Compare Discogs and User collection\n# -----------------------------------\n$.getVinylsToImport = (discogs_vinyls, user_vinyls) ->\n    alreadyInCollection = []\n    for discogs_vinyl in discogs_vinyls\n        for user_vinyl in user_vinyls\n            alreadyInCollection.push discogs_vinyl if discogs_vinyl.id is parseInt user_vinyl.release_id\n\n    # remove vinyls that are already in collection\n    onlyInA = alreadyInCollection.filter((current) ->\n        return discogs_vinyls.filter((current_b) ->\n            return current_b.id == current.id\n        ).length == 0\n    )\n\n    onlyInB = discogs_vinyls.filter((current) ->\n        return alreadyInCollection.filter((current_a) ->\n            return current_a.id == current.id\n        ).length == 0\n    )\n\n    vinylsToImport = onlyInA.concat(onlyInB)\n    return {\n        \"vinylsToImport\" : vinylsToImport\n        \"alreadyInCollection\" : alreadyInCollection\n    }\n\n$.getReleases = (username, user_id) ->\n    $('.js-startImport').html('<i class=\"fa fa-fw fa-spin fa-refresh\"></i> Scan Discogs')\n\n    user_vinyls = []\n    discogs_vinyls = []\n\n    $.ajax\n        url: \"https://api.discogs.com/users/#{username}/collection/folders/0/releases?page=1&per_page=100\"\n        type: 'GET'\n        error: (x,status,error) ->\n            console.log status\n            console.log error\n        success: (response) ->\n            console.log 'pagination: ', response.pagination\n            promises = []\n            currentPage = 1\n\n            # Get discogs collection\n            # -----------------------------------------------\n            while currentPage <= response.pagination.pages\n                request = $.ajax\n                    url: \"https://api.discogs.com/users/#{username}/collection/folders/0/releases?page=#{currentPage}&per_page=100\"\n                    type: 'GET'\n                    error: (x,status,error) ->\n                        console.log status\n                        console.log error\n                    success: (response) ->\n                        console.log response\n                        for release in response.releases\n                            discogs_vinyls.push release\n                promises.push(request)\n                currentPage++\n\n            $.when.apply(null, promises).done ->\n                # Get vinyls that are already in users collection\n                # -----------------------------------------------\n                $userVinylsCall = $.ajax\n                    url: '/api/user/'+user_id+'/vinyls'\n                    type: 'GET'\n                    error: (x,status,error) ->\n                        console.log status\n                        console.log error\n                    success: (response) ->\n                        user_vinyls = response.data\n                        # console.log user_vinyls, discogs_vinyls\n\n                        vinylsObj = $.getVinylsToImport(discogs_vinyls, user_vinyls)\n                        console.log \"vinyls to import: \", vinylsToImport\n\n                        # show fetch results\n                        $('.js-startImport').fadeOut 400, ->\n                            $('.js-vinylsFound').text discogs_vinyls.length\n                            $('.js-alreadyInCollection').text vinylsObj.alreadyInCollection.length\n                            $('.js-vinylsToImport').text vinylsObj.vinylsToImport.length\n                            $('.js-startMapping').attr('disabled', 'disabled') unless vinylsObj.vinylsToImport.length\n                            $('.js-importFetchResults').fadeIn()\n\n# Click Start Mapping\n# ----------------------------\n$('.js-startMapping').click ->\n    console.log \"Starting Mapping ...\"\n    $('.js-startMapping').hide()\n    $('.js-importProgress').show()\n    processNext(0)\n\n# Add vinyl n from discogs collection\n# -----------------------------------\nprocessNext = (n) ->\n    console.log \"Processing vinyl index #{n}\"\n    # update progress bar\n    $('.js-importProgress .progress-bar').css('width', \"#{(100 * n) / vinylsToImport.length}%\" )\n    $('.js-importProgress .progress-bar').text(\"#{Math.round(((100 * n) / vinylsToImport.length) * 100) / 100}%\")\n\n    if n < vinylsToImport.length\n        $('.js-currentImportVinyl').text(\"#{vinylsToImport[n].basic_information.artists[0].name} - #{vinylsToImport[n].basic_information.title}\")\n        $.ajax\n            url: \"/api/discogs/#{vinylsToImport[n].id}\"\n            type: \"GET\"\n            error: (x,status,error) ->\n                console.log status\n                console.log error\n            success: (vinyl) -> # fetched vinyl from Discogs\n                userCurrency = $('meta[name=user-currency]').attr('content')\n                $.fetchPrice vinyl.id, userCurrency, (price) ->\n                    $vinylData = $.mapVinylData vinyl\n                    $vinylData.price = price\n                    $vinylData._token = $('meta[name=csrf-token]').attr('content')  # attach CSRF token\n\n                    $.ajax\n                        url: '/vinyl/create'\n                        type: 'POST'\n                        data: $vinylData\n                        success: (reponse) ->\n                            console.log \"vinyl #{n} added!\"\n                            n++\n                            processNext(n)\n                        error: (error) ->\n                            console.warn error\n    else # import complete\n        $('.js-currentImportVinyl').hide()\n        $('.js-importProgress .progress-bar').addClass('progress-bar-success')\n        $('.js-importComplete').show()\n"],"sourceRoot":"/source/"}