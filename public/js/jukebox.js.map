{"version":3,"sources":["jukebox.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;EAAA,MAAA,GAAS,CAAA,CAAE,UAAF,CAAa,CAAC,IAAd,CAAmB,QAAnB;;EAET,GAAG,CAAC,GAAJ,CAAQ,eAAR;;EAEA,EAAA,GAAS,IAAA,GAAA,CACL;IAAA,EAAA,EAAI,UAAJ;IACA,IAAA,EACI;MAAA,MAAA,EAAQ,EAAR;MACA,MAAA,EAAQ,MADR;MAEA,OAAA,EAAS,IAFT;MAGA,OAAA,EAAS,SAHT;MAIA,OAAA,EAAS,IAJT;MAKA,KAAA,EACI;QAAA,EAAA,EAAI,IAAJ;QACA,KAAA,EAAO,sBADP;QAEA,MAAA,EAAQ,GAFR;QAGA,KAAA,EAAO,GAHP;QAIA,KAAA,EAAO,GAJP;QAKA,IAAA,EAAM,GALN;QAMA,OAAA,EAAS,GANT;OANJ;KAFJ;IAgBA,OAAA,EACI;MAAA,cAAA,EAAgB,SAAC,MAAD;eACZ,CAAC,CAAC,OAAF,CAAU,YAAA,GAAa,MAAb,GAAoB,oBAA9B,EAAmD,CAAA,SAAA,KAAA;iBAAA,SAAC,QAAD;YAC/C,KAAC,CAAA,MAAD,GAAU;YACV,KAAC,CAAA,OAAD,GAAW;mBACX,KAAC,CAAA,SAAD,CAAW,KAAC,CAAA,MAAZ;UAH+C;QAAA,CAAA,CAAA,CAAA,IAAA,CAAnD;MADY,CAAhB;MAMA,SAAA,EAAW,SAAC,MAAD;AAEP,YAAA;QAAA,YAAA,CAAa,IAAC,CAAA,OAAd;QAGA,KAAA,GAAQ,MAAO,CAAA,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,CAAA,CAAA,GAAc,MAAM,CAAC,MAAhC,CAAA;QACf,KAAA,GAAQ,KAAK,CAAC,MAAO,CAAA,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,CAAA,CAAA,GAAc,KAAK,CAAC,MAAM,CAAC,MAAtC,CAAA;QAGrB,IAAC,CAAA,OAAD,GAAW,KAAK,CAAC,GAAG,CAAC,KAAV,CAAgB,CAAC,EAAjB;QAGX,IAAC,CAAA,KAAK,CAAC,EAAP,GAAY,KAAK,CAAC;QAClB,IAAC,CAAA,KAAK,CAAC,KAAP,GAAe,KAAK,CAAC;QACrB,IAAC,CAAA,KAAK,CAAC,MAAP,GAAgB,KAAK,CAAC;QACtB,IAAC,CAAA,KAAK,CAAC,KAAP,GAAe,KAAK,CAAC;QACrB,IAAC,CAAA,KAAK,CAAC,KAAP,GAAe,KAAK,CAAC;QACrB,IAAC,CAAA,KAAK,CAAC,IAAP,GAAc,KAAK,CAAC;eACpB,IAAC,CAAA,KAAK,CAAC,OAAP,GAAiB,KAAK,CAAC;MAlBhB,CANX;MA0BA,WAAA,EAAa,SAAC,MAAD;eACT,IAAC,CAAA,MAAD,GAAU;MADD,CA1Bb;MA6BA,OAAA,EAAS,SAAA;QACL,OAAO,CAAC,GAAR,CAAY,SAAZ;eACA,YAAA,CAAa,IAAC,CAAA,OAAd;MAFK,CA7BT;MAiCA,MAAA,EAAQ,SAAA;eACJ,OAAO,CAAC,GAAR,CAAY,QAAZ;MADI,CAjCR;MAoCA,SAAA,EAAW,SAAA;eACP,IAAC,CAAA,OAAD,GAAW,UAAA,CAAW,CAAA,SAAA,KAAA;iBAAA,SAAA;mBAClB,KAAC,CAAA,SAAD,CAAW,KAAC,CAAA,MAAZ;UADkB;QAAA,CAAA,CAAA,CAAA,IAAA,CAAX,EAET,IAFS;MADJ,CApCX;MAyCA,MAAA,EAAQ,SAAA;eACJ,OAAO,CAAC,GAAR,CAAY,QAAZ;MADI,CAzCR;KAjBJ;IA6DA,KAAA,EAAO,SAAA;aACH,IAAC,CAAA,cAAD,CAAgB,IAAC,CAAA,MAAjB;IADG,CA7DP;GADK;AAJT","file":"jukebox.js","sourcesContent":["userId = $('#jukebox').data('userid')\n\nVue.use(VueYouTubeEmbed)\n\nvm = new Vue\n    el: '#jukebox'\n    data:\n        vinyls: []\n        userId: userId\n        loading: true\n        videoId: 'videoId'\n        timeout: null\n        vinyl:\n            id: null\n            cover: \"/images/PH_vinyl.svg\"\n            artist: \"-\"\n            title: \"-\"\n            label: \"-\"\n            year: \"-\"\n            country: \"-\"\n\n    methods:\n        fetchVinylList: (userId) ->\n            $.getJSON \"/api/user/#{userId}/vinyls/videos/all\", (response) =>\n                @vinyls = response\n                @loading = false\n                @newRecord(@vinyls)\n\n        newRecord: (vinyls) ->\n            # clear skip timeout\n            clearTimeout(@timeout)\n            \n            # select random vinyl and video\n            vinyl = vinyls[Math.floor(Math.random()*vinyls.length)]\n            video = vinyl.videos[Math.floor(Math.random()*vinyl.videos.length)]\n\n            # update youtubeId\n            @videoId = video.uri.slice(-11)\n\n            # set vinyl data\n            @vinyl.id = vinyl.id\n            @vinyl.cover = vinyl.artwork\n            @vinyl.artist = vinyl.artist\n            @vinyl.title = vinyl.title\n            @vinyl.label = vinyl.label\n            @vinyl.year = vinyl.releasedate\n            @vinyl.country = vinyl.country\n\n        playerReady: (player) ->\n            @player = player\n\n        playing: ->\n            console.log \"playing\"\n            clearTimeout(@timeout)\n\n        paused: ->\n            console.log \"paused\"\n\n        buffering: ->\n            @timeout = setTimeout =>\n                @newRecord(@vinyls)\n            , 5000\n\n        queued: ->\n            console.log \"queued\"\n\n    ready: ->\n        @fetchVinylList(@userId)\n"],"sourceRoot":"/source/"}